(a + b) =>
  ~a
  ~b
  !i32.add

(a * b) =>
  ~a
  ~b
  !i32.mul

(a - b) =>
  ~a
  ~b
  !i32.sub

(a == b) =>
  ~a
  ~b
  !i32.eq

(a != b) =>
  ~a
  ~b
  !i32.ne

(a >= b) =>
  ~a
  ~b
  !i32.ge_s

(a > b) =>
  ~a
  ~b
  !i32.gt_s

(a < b) =>
  ~a
  ~b
  !i32.lt_s

(a <= b) =>
  ~a
  ~b
  !i32.le_s

(a += b) =>
  ~a = ~a + ~b

(a -= b) =>
  ~a = ~a - ~b

(a *= b) =>
  ~a = ~a * ~b

(a /= b) =>
  ~a = ~a / ~b

(- a) => (0 - ~a)

store addr value =>
  ~addr
  ~value
  !i32.store
  ()

(addr <- value) =>
  store ~addr ~value

load addr =>
  ~addr
  !i32.load

get index array => load (~array + (~index * 4))

string.len string => load ~string
string.ptr string => ~string + 4

Stdout => 1

false => 0
true => 1

if cond then: thenBody else: elseBody =>
  ~cond
  !if
  ~thenBody
  !else
  ~elseBody
  !end

if cond then: thenBody => if ~cond then: ~thenBody else: ()

if cond thenBody => if ~cond then: ~thenBody

for i from:start until:end ..body =>
  ~i = ~start
  !loop $loop
  ~body
  ~i += 1
  ~i < ~end
  !(br_if $loop)
  !end

for i from:start through:end ..body => for ~i from:~start until:(~end + 1) ~body