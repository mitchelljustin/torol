__stack_pointer = 0x10000 # 64KiB of stack space

sp_get => !global.get __stack_pointer

sp_set => !global.set __stack_pointer

sp_decr n =>
  sp_get
  !i32.const ~n
  !i32.sub
  sp_set


binop op:op ld:load st:store sz:size lhs rhs =>
  sp_decr ~size
  sp_get
  ~lhs
  ~load
  ~rhs
  ~load
  ~op
  ~store

(lhs + rhs) =>
  binop
    op:!i32.add
    ld:!i32.load
    st:!i32.store
    sz:4
    ~lhs
    ~rhs


(a * b) =>
  ~a
  ~b
  !i32.mul

(a - b) =>
  ~a
  ~b
  !i32.sub

(a == b) =>
  ~a
  ~b
  !i32.eq

(a != b) =>
  ~a
  ~b
  !i32.ne

(a >= b) =>
  ~a
  ~b
  !i32.ge_s

(a > b) =>
  ~a
  ~b
  !i32.gt_s

(a < b) =>
  ~a
  ~b
  !i32.lt_s

(a <= b) =>
  ~a
  ~b
  !i32.le_s

(a += b) =>
  ~a = ~a + ~b

(a -= b) =>
  ~a = ~a - ~b

(a *= b) =>
  ~a = ~a * ~b

(a /= b) =>
  ~a = ~a / ~b

(- a) => (0 - ~a)

not a =>
  ~a
  !i32.eqz

store addr value inst:inst =>
  ~addr
  ~value
  !~inst
  ()

store32 addr value => store ~addr ~value inst:i32.store
store8 addr value => store ~addr ~value inst:i32.store8

load addr =>
  ~addr
  !i32.load

get index array => load (~array + (~index * 4))

string.len string => load ~string
string.ptr string => ~string + 4

stdout => 1

false => 0
true => 1

if cond then: thenBody else: elseBody =>
  ~cond
  !if
  ~thenBody
  !else
  ~elseBody
  !end

if cond then: body => if ~cond then: ~body else: ()

if cond ..body => if ~cond then: ~body

unless cond ..body => if (not ~cond) ~body

for init:init cond:cond update:update body:body =>
  ~init
  !loop $loop
  ~body
  ~update
  ~cond
  !(br_if $loop)
  !end


for i from:start until:end ..body =>
  for
    init:
      ~i = ~start
    cond:
      ~i < ~end
    update:
      ~i += 1
    body:
      ~body

while cond ..body =>
  for
    init: ()
    cond: ~cond
    update: ()
    body: ~body

import from: "wasi_unstable"
  fd_write fd iovec iovec_len num_written

string.store iovec string =
  store32 \ iovec \ string.ptr string
  store32 \ iovec + 4 \ string.len string

memory = 0x00

print message =
  iovec = 0
  iovec_len = 1
  string.store iovec message
  written = iovec + 8
  () = fd_write stdout iovec iovec_len written
